version: "3.8"

services:

  postgres:
    image: roh-postgres:latest
    build:
      context: postgres
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - roh-postgres:/var/lib/postgresql/data

  redis:
    image: roh-redis:latest
    build:
      context: redis
      dockerfile: Dockerfile.redis
    volumes:
      - roh-redis:/var/lib/redis/data

  app:
    image: roh-app:latest
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        RAILS_APP_USER: ${RAILS_APP_USER}
        RAILS_APP_GROUP: ${RAILS_APP_GROUP}
        RAILS_APP_UID: ${RAILS_APP_UID}
        RAILS_APP_GID: ${RAILS_APP_GID}
        RAILS_APP_DIR: ${RAILS_APP_DIR}
    depends_on:
      - postgres
      - redis
    ports:
      - '8010:8010'
    env_file: .env

  sidekiq:
    image: roh-sidekiq:latest
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        RAILS_APP_USER: ${RAILS_APP_USER}
        RAILS_APP_GROUP: ${RAILS_APP_GROUP}
        RAILS_APP_UID: ${RAILS_APP_UID}
        RAILS_APP_GID: ${RAILS_APP_GID}
        RAILS_APP_DIR: ${RAILS_APP_DIR}
    command: bundle exec sidekiq 
    depends_on:
      - postgres
      - redis
    env_file: .env

  nginx:
    image: roh-ingress:latest
    build:
      context: ingress
      dockerfile: Dockerfile.nginx
    depends_on:
      - app
    ports:
      - '80:80'
    volumes:
      - roh-nginx-logs:/var/log/nginx

volumes:
  roh-postgres:
  roh-redis:
  roh-nginx-logs: